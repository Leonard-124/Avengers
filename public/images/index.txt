
const express = require('express');//commonJS
const path = require('path');
const bcrypt = require('bcrypt');
const collection = require('./config');

const app = express();

//convert data into json format
app.use(express.json());

app.use(express.urlencoded({extended:false}));//why false?
//use EJS as the view engine
app.set('view engine', 'ejs');

//static file
app.use(express.static('public'));


app.get('/', (req,res) => {
   res.render('login');
});

app.get('/signup', (req,res) => {
   res.render('signup');
});

//Register user
app.post('/signup', async (req,res) => {
   const data = {
      name: req.body.username,
      password:req.body.password
   }

   //check if user already exists in the database
const existingUser = await collection.findOne({name: data.name});
if (existingUser) {
   res.send("User already exists. Please choose a different username.");
}else {
   //hash the password using bcrypyt
   const saltRounds = 10;//Number of salt round for bcrypt
   const hashedPassword = await bcrypt.hash(data.password, saltRounds);

   data.password = hashedPassword;//Replace the hash password with the original password

   const userdata = await collection.insertMany(data);//[data]
   console.log(userdata);//like if it doesn't exist then add data
   res.render('home');//successfully registered
}

})

//Login user
app.post('/login', async (req,res) => {
   try {
      const check = await collection.findOne({name: req.body.username});
      if (!check) {
         res.send("User not found. Please sign up.");
      }

      //compare the hash password from the database with the plain text
      const isPasswordMatch = await bcrypt.compare(req.body.password, check.password);
      if(isPasswordMatch) {
         res.render("home")
      }else {
         req.send("wrong password")
      }
   }catch{
      res.send("wrong Details");
   }
});
//start server
const PORT = 3000;
app.listen(PORT, () => {
   console.log(`Server is running on http://localhost:${PORT}`);
})
